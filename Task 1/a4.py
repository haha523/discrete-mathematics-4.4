def truth_table_to_zhegalkin(tt):
    n = len(tt[0])  # Количество переменных
    result = 0
    # Для каждого ряда таблицы истинности, где значение 1
    for i, row in enumerate(tt):
        if row[-1] == 1:  # Если выходное значение 1
            term = 1
            for j in range(n):
                if row[j] == 1:
                    term *= (1 << j)  # Если переменная равна 1, то умножаем на соответствующую степень 2
            result ^= term  # Сложение по модулю 2 (XOR)
    return result

# Пример использования
# Таблица истинности: {x1, x2}, выходное значение в последней колонке
# Например, для функции f(x1, x2) = x1 AND x2
tt = [
    [0, 0, 0],  # f(0, 0) = 0
    [0, 1, 0],  # f(0, 1) = 0
    [1, 0, 0],  # f(1, 0) = 0
    [1, 1, 1]   # f(1, 1) = 1
]

result = truth_table_to_zhegalkin(tt)
print(f"Полином Жегалкина: {bin(result)[2:]}")
